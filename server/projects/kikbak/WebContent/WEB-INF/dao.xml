<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

    <context:annotation-config />

    <tx:annotation-driven transaction-manager="transactionManager" />
    <tx:annotation-driven transaction-manager="roTransactionManager" />

    <bean id="roTransactionManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="roSessionFactory" />
        </property>
    </bean>

    <bean id="transactionManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="rwSessionFactory" />
        </property>
        <property name="nestedTransactionAllowed" value="true" />
    </bean>
    <tx:advice id="readWriteAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" rollback-for="com.kikbak.admin.service.AuthorizationException" />
            <tx:method name="*" rollback-for="com.kikbak.admin.service.InvalidRequestException" />
            <!-- <tx:method name="*" rollback-for="com.kikbak.admin.service" /> -->
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <bean id="ReadOnlyUserDAO" class="com.kikbak.client.dao.impl.ReadOnlyUserDAOImpl">
        <property name="sessionFactory" ref="roSessionFactory"/>
    </bean>
     
    <bean id="ReadWriteUserDAO" class="com.kikbak.client.dao.impl.ReadWriteUserDAOImpl">
        <property name="sessionFactory" ref="rwSessionFactory"/>
    </bean>
     
    <bean id="ReadOnlyAccountDAO" class="com.kikbak.admin.dao.impl.ReadOnlyAccountDAOImpl">
        <property name="sessionFactory" ref="roSessionFactory" />
    </bean>
    
    <bean id="ReadOnlyLocationDAO" class="com.kikbak.admin.dao.impl.ReadOnlyLocationDAOImpl">
        <property name="sessionFactory" ref="roSessionFactory"/>
    </bean>
    
    <bean id="ReadWriteLocationDAO" class="com.kikbak.admin.dao.impl.ReadWriteLocationDAOImpl">
        <property name="sessionFactory" ref="rwSessionFactory"/>
    </bean>

    <bean id="ReadOnlyMerchantDAO" class="com.kikbak.admin.dao.impl.ReadOnlyMerchantDAOImpl">
        <property name="sessionFactory" ref="roSessionFactory"/>
    </bean>
    
    <bean id="ReadWriteMerchantDAO" class="com.kikbak.admin.dao.impl.ReadWriteMerchantDAOImpl">
        <property name="sessionFactory" ref="rwSessionFactory"/>
    </bean>
    
    <bean id="ReadOnlyOfferDAO" class="com.kikbak.admin.dao.impl.ReadOnlyOfferDAOImpl">
        <property name="sessionFactory" ref="roSessionFactory"/>
    </bean>
    
    <bean id="ReadWriteOfferDAO" class="com.kikbak.admin.dao.impl.ReadWriteOfferDAOImpl">
        <property name="sessionFactory" ref="rwSessionFactory"/>
    </bean>

</beans>