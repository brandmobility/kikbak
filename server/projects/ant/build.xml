<project name="Kikbak-Main" basedir="." >
	
	<import file="./build.patcher.xml" />
	
	<property name="build.dir" value="${user.dir}/build"/>
	<property name="external.lib.dir" value="${user.dir}/../external/libs"/>
	
	<path id="files_to_copy" />
		
	<target name="init-dependencies">
	    <echo message="init: ${module.name}" />
		<echo>exnternal lib dir: "${external.lib.dir}" </echo>

	    <!-- setup properties that depend on properties that should be defined in build scripts that import this one -->
	    <property name="compile.args" value="-Xlint:all -Xlint:-serial -Xlint:-path -Werror -encoding utf-8"/>
	
		<property name="classes.dir" value="${build.dir}/${module.name}/classes"/>
	    

	    <!-- base folders under TARGET in which build droppings live -->
	    <property name="dist.dir" location="${build.dir}/${module.name}" />
	
	    <!-- this is the location of the intermediate bits generated during a build -->
	    <property name="bin.dir.name" value="bin"/>
	    <property name="bin.dir" value="${dist.dir}/${bin.dir.name}"/>
	

	    <!-- this is the final location of generated src by the build -->
	    <property name="generated.src.dir" value="${dist.dir}/generatedsrc" />
	
	    <!-- this is the location of the JUnit reports -->
	    <property name="reports.dir.name" value="reports"/>
	    <property name="reports.dir" value="${dist.dir}/${reports.dir.name}"/>
	    <property name="reports.url" location="${reports.dir}/html/index.html" />
	
	    <!-- No main class if none is specified by the importing build file -->
	    <property name="module.main" value="" />
	    <path id="lib.classpath">
	        <fileset dir="${lib.dir}">
	            <include name="**/*.jar" />
	        </fileset>
	    </path>
	    <path id="project.classpath">
	        <pathelement location="${bin.dir}" />
	        <pathelement location="${bin.dir}/${classes.dir}" />
	        <path refid="lib.classpath" />
	    </path>
	
	    <!-- External command -->
	    <property name="skip.dependencies" value="${skip.package}"/>
	</target>

   <target name="check-create-lib-dir-symlink">
        <condition property="should-create-lib-dir-symlink">
            <isset property="lib.dir" />
        </condition>
    </target>
	
	<target name="link-lib-dir" depends="check-create-lib-dir-symlink" if="${should-create-lib-dir-symlink}"> 
		<property name="build.lib.dir" value="${build.dir}/${module.name}/${lib.dir}"/>
		<symlink link="${build.lib.dir}" resource="${external.lib.dir}" overwrite="true"/>
	</target>

	<target name="create-module-dir">
		<mkdir dir="${classes.dir}"/>
	</target>

    <target name="compile" depends="init-dependencies,pre-compile-ext,create-module-dir,link-lib-dir">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="lib.classpath" includeantruntime="false"/>
    </target>

    <target name="build" depends="compile, pre-build-ext">
        <mkdir dir="${bin.dir}"/>
        <jar destfile="${bin.dir}/${archive.name}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    	<copy todir="${dist.dir}">
            <path refid="files_to_copy" />
        </copy>
    </target>

	<!-- extension points -->
	<extension-point name="pre-build-ext"/>
	<extension-point name="pre-compile-ext"/>

</project>

